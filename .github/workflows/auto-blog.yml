name: Automated Blog Generation

on:
  # Run every Monday and Thursday at 9:00 AM Mexico time (15:00 UTC)
  schedule:
    - cron: '0 15 * * 1,4'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      topic:
        description: 'Custom topic for the article (optional)'
        required: false
        type: string

jobs:
  generate-blog:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Create articles directory
      run: mkdir -p assets/images/articles
    
    - name: Generate blog article
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}
        CUSTOM_TOPIC: ${{ github.event.inputs.topic }}
      run: |
        if [ -n "$CUSTOM_TOPIC" ]; then
          echo "Generating article with custom topic: $CUSTOM_TOPIC"
          node scripts/generate-blog.js --topic="$CUSTOM_TOPIC"
        else
          echo "Generating article with random topic"
          node scripts/generate-blog.js
        fi
    
    - name: Update noticias.html with new article
      run: node scripts/update-news-page.js
    
    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are changes to commit
        if git diff --quiet && git diff --staged --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        # Add all new files
        git add .
        
        # Create commit message with article title
        ARTICLE_TITLE=$(node -e "
          const fs = require('fs');
          const files = fs.readdirSync('.').filter(f => f.endsWith('.html') && f.startsWith('articulo-') || f.match(/^[a-z-]+\.html$/));
          const newest = files.sort((a, b) => fs.statSync(b).mtime - fs.statSync(a).mtime)[0];
          if (newest) {
            const content = fs.readFileSync(newest, 'utf8');
            const titleMatch = content.match(/<title>([^|]+)/);
            if (titleMatch) console.log(titleMatch[1].trim());
            else console.log('Nuevo artÃ­culo generado');
          } else {
            console.log('Nuevo artÃ­culo generado');
          }
        ")
        
        git commit -m "ğŸ¤– Auto-generaciÃ³n: $ARTICLE_TITLE

        - Nuevo artÃ­culo de educaciÃ³n financiera generado automÃ¡ticamente
        - Imagen descargada de Unsplash
        - PÃ¡gina de noticias actualizada
        - Generado: $(date +'%Y-%m-%d %H:%M:%S %Z')
        
        [skip ci]"
        
        git push
    
    - name: Create deployment comment
      if: success()
      run: |
        echo "âœ… Nuevo artÃ­culo generado y publicado automÃ¡ticamente"
        echo "ğŸ“… Fecha: $(date)"
        echo "ğŸ”„ PrÃ³xima generaciÃ³n programada segÃºn calendario" 